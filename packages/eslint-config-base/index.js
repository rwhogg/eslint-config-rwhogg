const always = "always"
const err = "error"
const off = "off"
const never = "never"

module.exports = {
    env: {
        browser: true,
        es6: true,
        node: true,
    },
    parserOptions: {
        ecmaFeatures: {
            globalReturn: true,
        },
        ecmaVersion: 2022,
    },
    plugins: ["fp", "sonarjs", "unicorn"],
    rules: {
        "accessor-pairs": err,
        "array-bracket-newline": [
            err,
            { multiline: true },
        ],
        "array-bracket-spacing": [
            err,
            never,
        ],
        "array-element-newline": [
            err,
            { ArrayExpression: "consistent" },
        ],
        "arrow-body-style": [
            err,
            "as-needed",
        ],
        "block-spacing":[
            err,
            always,
        ],
        "brace-style": [
            err,
            "stroustrup",
        ],
        camelcase: [
            err,
            { properties: never },
        ],
        "comma-dangle": [
            err,
            "always-multiline",
        ],
        "comma-spacing": err,
        "comma-style": err,
        "computed-property-spacing": err,
        "consistent-return": err,
        "constructor-super": err,
        curly: err,
        "dot-location": [
            err,
            "property",
        ],
        "dot-notation": err,
        "eol-last": [
            err,
            always,
        ],
        eqeqeq: [
            err,
            "smart",
        ],
        "getter-return": err,
        "guard-for-in": err,
        "linebreak-style": [
            err,
            "unix",
        ],
        "no-cond-assign": [err, "except-parens"],
        "no-control-regex": err,
        "no-debugger": off,
        "no-dupe-else-if": err,
        "no-duplicate-case": err,
        "no-div-regex": err,
        "no-empty-character-class": err,
        "no-ex-assign": err,
        "no-extend-native": err,
        "no-extra-semi": err,
        "no-func-assign": err,
        "no-import-assign": err,
        "no-invalid-regexp": err,
        "no-invalid-this": err,
        "no-irregular-whitespace": [
            err,
            { skipStrings: true, skipComments: false, skipRegExps: true, skipTemplates: true },
        ],
        "no-loss-of-precision": err,
        "no-misleading-character-class": err,
        "no-obj-calls": err,
        "no-prototype-builtins": err,
        "no-regex-spaces": err,
        "no-setter-return": err,
        "no-sparse-arrays": off,
        "no-unreachable-loop": err,
        "no-unsafe-negation": err,
        "no-useless-backreference": err,
        "use-isnan": err,
        "for-direction": err,
        "func-call-spacing": [
            err,
            never,
        ],
        indent: [
            err,
            4,
            {
                "SwitchCase": 1,
            },
        ],
        "max-len": [err, { "code": 120 }],
        "new-cap": err,
        "new-parens": err,
        "no-console": off,
        "no-class-assign": err,
        "no-dupe-class-members": err,
        "no-else-return": err,
        "no-eval": err,
        "no-extra-label": err,
        "no-fallthrough": off,
        "no-iterator": err,
        "no-lone-blocks": err,
        "no-magic-numbers": [
            err,
            {
                ignoreArrayIndexes: true,
                ignore: [0, 1, 2, 3, 4, 5, 8, 10, 16, -1],
            },
        ],
        "no-mixed-spaces-and-tabs": err,
        "no-multi-spaces": err,
        "no-multiple-empty-lines": [
            err,
            {
                max: 2,
                maxEOF: 1,
            },
        ],
        "no-new-wrappers": err,
        "no-return-assign": [
            err,
            always,
        ],
        "no-self-compare": err,
        "no-sequences": err,
        "no-useless-escape": err,
        "no-useless-return": err,
        "no-undefined": err,
        "no-underscore-dangle": [
            err,
            { enforceInMethodNames: true },
        ],
        "no-lonely-if": err,
        "no-trailing-spaces": err,
        "no-var": err,
        "no-with": err,
        "no-compare-neg-zero": err,
        "no-constant-condition": err,
        "no-dupe-args": err,
        "no-dupe-keys": err,
        "no-empty": err,
        "no-unexpected-multiline": err,
        "no-unreachable": err,
        "no-unsafe-finally": err,
        "no-extra-bind": err,
        "no-proto": err,
        "no-return-await": err,
        "no-unused-vars": [err, { args: "none" }],
        "no-useless-call": err,
        "no-useless-computed-key": err,
        "no-tabs": err,
        "no-this-before-super": err,
        "object-curly-spacing": [err, always],
        "padded-blocks": [err, never],
        "prefer-const": [err, { destructuring: "all" }],
        "prefer-exponentiation-operator": err,
        "prefer-numeric-literals": err,
        quotes: [
            err,
            "double",
        ],
        "require-atomic-updates": err,
        semi: [
            err,
            never,
        ],
        "unicode-bom": [
            err,
            never,
        ],
        "valid-typeof": err,
        yoda: err,
        "fp/no-loops": err,
        "fp/no-arguments": err,
        "sonarjs/no-all-duplicated-branches": err,
        "sonarjs/no-extra-arguments": err,
        "sonarjs/no-one-iteration-loop": err,
        "sonarjs/no-redundant-boolean": err,
        "sonarjs/non-existent-operator": err,
        "unicorn/better-regex": err,
        "unicorn/custom-error-definition": err,
        "unicorn/consistent-destructuring": err,
        "unicorn/empty-brace-spaces": err,
        "unicorn/error-message": err,
        "unicorn/escape-case": err,
        "unicorn/explicit-length-check": [err, { "non-zero": "greater-than" }],
        "unicorn/filename-case": [err, { "case": "pascalCase" }],
        "unicorn/new-for-builtins": err,
        "unicorn/no-abusive-eslint-disable": err,
        "unicorn/no-instanceof-array": err,
        "unicorn/no-array-push-push": err,
        "unicorn/no-console-spaces": err,
        // NOTE: NOT redundant with the builtin no-lonely-if. It's recommended to use both together
        "unicorn/no-lonely-if": err,
        "unicorn/no-nested-ternary": err,
        "unicorn/no-this-assignment": err,
        "unicorn/no-thenable": err,
        "unicorn/no-unreadable-iife": err,
        "unicorn/no-unsafe-regex": err,
        "unicorn/no-useless-fallback-in-spread": err,
        "unicorn/no-useless-promise-resolve-reject": err,
        "unicorn/no-useless-switch-case": err,
        "unicorn/prefer-array-find": err,
        "unicorn/prefer-date-now": err,
        "unicorn/prefer-array-flat-map": err,
        "unicorn/prefer-includes": err,
        "unicorn/prefer-math-trunc": err, // but still prefer Math.floor in most cases...
        "unicorn/prefer-modern-math-apis": err,
        "unicorn/prefer-native-coercion-functions": err,
        "unicorn/prefer-negative-index": err,
        "unicorn/prefer-spread": err,
        "unicorn/prefer-string-starts-ends-with": err,
        "unicorn/text-encoding-identifier-case": err,
        "unicorn/throw-new-error": err,
    },
}
